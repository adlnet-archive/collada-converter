{"name":"Collada-converter","tagline":"A library for converting COLLADA files to a format suitable for WebGL ","body":"Collada converter\r\n=================\r\n\r\nLoads and converts COLLADA files into a format more usable for WebGL.\r\n\r\nUser interface\r\n==============\r\n\r\nThe converter comes with a simple user interface in the form of an local web page.\r\nYou don't need any web server to use this page - simply download and build the project,\r\nthen open `examples/convert.html` from the project folder.\r\nIf you do not want to build the project yourself,\r\nthere is a live preview [here](http://rmx.github.io/collada-converter/examples/convert.html).\r\n\r\nBuilding\r\n========\r\n\r\nThere are several ways of building the library:\r\n\r\n* Using the command line\r\n    * Make sure you have [Node.js](http://nodejs.org/) installed\r\n    * Navigate to the project root\r\n    * Type `npm update` (only need to do this once)\r\n    * Type `make.bat` (Windows) or `make` (Unix)\r\n* Using Microsoft Visual Studio\r\n    * Make sure you have [typescript for Visual Studio](http://www.typescriptlang.org/#Download) installed \r\n    * Open the solution in the `visual_studio` subdirectory\r\n    * Build the project\r\n\r\nArchitecture\r\n============\r\n\r\nCOLLADA files are text files, with their content structured as an XML document.\r\nThis converter transforms such files into documents that are suitable for loading in a WebGL engine.\r\nThis conversion is performed in 4 stages, implemented by the following modules:\r\n\r\n1. **DOMParser** (built in in all browsers), to convert the text file into an XML document.\r\n2. **ColladaLoader** (from this library), to convert the XML document into a corresponding COLLADA javascript object. The resulting object is just easier to work with than a generic XML document and provides some convenience functionality for navigating the COLLADA document.\r\n3. **ColladaConverter** (from this library), to extract all geometries, materials, and animations from the COLLADA javascript object and transform them into a representation that is suitable for realtime rendering on the GPU.\r\n4. **ColladaExporter** (from this library), to pack the converted data into a file that is suitable for extremely fast loading in WebGL.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}